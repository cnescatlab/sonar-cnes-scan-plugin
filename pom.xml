<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>fr.cnes.sonar.plugins.scan</groupId>
  <artifactId>sonar-cnes-scan-plugin</artifactId>
  <packaging>sonar-plugin</packaging>
  <version>2.0</version>

  <name>SonarQube CNES Scan Plugin</name>
  <description>CNES plugin for SonarQube that launches analysis directly from the web interface and export reports.</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <sonar.api.version>9.14.0.375</sonar.api.version>
    <sonar.addons.version>10.6.0.92116</sonar.addons.version>
    <commons.lang3.version>3.14.0</commons.lang3.version>
    <gson.version>2.11.0</gson.version>
    <junit.jupiter.api.version>5.11.0-M2</junit.jupiter.api.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    <jdk.version>17</jdk.version>
    <pluginUrl>https://cnes.fr</pluginUrl>
    <pluginOrganizationName>CNES</pluginOrganizationName>
  </properties>

  <licenses>
    <license>
      <name>GPL-3.0</name>
      <url>https://www.gnu.org/licenses/gpl-3.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>begarco</id>
      <name>Benoît Garçon</name>
      <email>benoit.garcon@outlook.com</email>
      <organization>CNES</organization>
      <organizationUrl>https://cnes.fr/</organizationUrl>
    </developer>
    <developer>
      <id>louisjdmartin</id>
      <name>Louis Martin</name>
      <email>louis.jd.martin@gmail.com</email>
      <organization>CNES</organization>
      <organizationUrl>https://cnes.fr/</organizationUrl>
    </developer>
    <developer>
      <id>Topin2001</id>
      <name>Topin</name>
    </developer>
  </developers>

  <dependencies>
    <!-- https://mvnrepository.com/artifact/org.sonarsource.api.plugin/sonar-plugin-api -->
    <dependency>
      <groupId>org.sonarsource.api.plugin</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${sonar.api.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.sonarsource.sonarqube/sonar-ws -->
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-ws</artifactId>
      <version>${sonar.addons.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.sonarsource.sonarqube/sonar-plugin-api-impl -->
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-plugin-api-impl</artifactId>
      <version>${sonar.addons.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons.lang3.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
    </dependency>


    <!-- unit tests -->
    <!-- https://mvnrepository.com/artifact/org.sonarsource.sonarqube/sonar-testing-harness -->
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-testing-harness</artifactId>
      <version>${sonar.addons.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.api.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
        <artifactId>sonar-packaging-maven-plugin</artifactId>
        <version>1.23.0.740</version>
        <extensions>true</extensions>
        <configuration>
          <jarName>sonar-cnes-scan-plugin</jarName>
          <pluginKey>cnesscan</pluginKey>
          <pluginClass>fr.cnes.sonar.plugins.scan.CnesScanPlugin</pluginClass>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <!-- UTF-8 bundles are not supported by Java, so they must be converted during build -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>native2ascii-maven-plugin</artifactId>
        <version>2.1.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.6.0</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <dataFile>target/jacoco.exec</dataFile>
              <!-- Sets the output directory for the code coverage report. -->
              <outputDirectory>target/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>